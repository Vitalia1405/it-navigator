import React, { useState } from "react";
import "../styles/AI.css"; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–æ–π —Å–∞–º–∏–π —Ñ–∞–π–ª —Å—Ç–∏–ª—ñ–≤ –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó

export default function Blockchain() {
  const [openModal, setOpenModal] = useState(null);
  const [activeTab, setActiveTab] = useState("theory");

  const handleOpen = (id) => {
    setOpenModal(id);
    setActiveTab("theory");
  };

  const handleClose = () => setOpenModal(null);

  const renderModalContent = (id) => {
    switch (id) {
      case "crypto":
        return {
          title: "üí∏ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏",
          theory: "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ ‚Äî —Ü–µ —Ü–∏—Ñ—Ä–æ–≤—ñ –≤–∞–ª—é—Ç–∏, –∑–∞—Å–Ω–æ–≤–∞–Ω—ñ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω—ñ. –í–æ–Ω–∏ –ø—Ä–∞—Ü—é—é—Ç—å –±–µ–∑ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫—É, –∑–∞–±–µ–∑–ø–µ—á—É—é—á–∏ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å —ñ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–∞—Ü—ñ—é.",
          example: "Bitcoin, Ethereum ‚Äî –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –ø—Ä–∏–∫–ª–∞–¥–∏. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –º–æ–∂—É—Ç—å –∑–±–µ—Ä—ñ–≥–∞—Ç–∏, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–∏ —ñ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏ –Ω–∞–ø—Ä—è–º—É, –±–µ–∑ –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫—ñ–≤."
        };
      case "supply":
        return {
          title: "üì¶ –õ–æ–≥—ñ—Å—Ç–∏–∫–∞",
          theory: "–ë–ª–æ–∫—á–µ–π–Ω —É –ª–æ–≥—ñ—Å—Ç–∏—Ü—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø—Ä–æ–∑–æ—Ä–æ–≥–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤. –¶–µ –∑–Ω–∏–∂—É—î —Ä–∏–∑–∏–∫ —à–∞—Ö—Ä–∞–π—Å—Ç–≤–∞ —Ç–∞ –ø—ñ–¥—Ä–æ–±–∫–∏.",
          example: "Walmart –∑–∞—Å—Ç–æ—Å–æ–≤—É—î –±–ª–æ–∫—á–µ–π–Ω –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —à–ª—è—Ö—É –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è ‚Äî –≤—ñ–¥ —Ñ–µ—Ä–º–∏ –¥–æ –ø–æ–ª–∏—Ü—ñ –º–∞–≥–∞–∑–∏–Ω—É."
        };
      case "contracts":
        return {
          title: "üìú –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏",
          theory: "–°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏ ‚Äî —Ü–µ –ø—Ä–æ–≥—Ä–∞–º–∏, —è–∫—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è, –∫–æ–ª–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–¥–∞–Ω—ñ —É–º–æ–≤–∏. –í–æ–Ω–∏ –∑–º–µ–Ω—à—É—é—Ç—å –ø–æ—Ç—Ä–µ–±—É —É –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫–∞—Ö.",
          example: "–£ —Å—Ñ–µ—Ä—ñ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏ –º–æ–∂—É—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –ø–µ—Ä–µ–¥–∞—á—É –ø—Ä–∞–≤ –≤–ª–∞—Å–Ω–æ—Å—Ç—ñ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏."
        };
      case "identity":
        return {
          title: "üÜî –¶–∏—Ñ—Ä–æ–≤–∞ —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å",
          theory: "–ë–ª–æ–∫—á–µ–π–Ω –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞—Ö–∏—â–µ–Ω—É –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω—É —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å, —â–æ –∑–±–µ—Ä—ñ–≥–∞—î –∫–æ–Ω—Ç—Ä–æ–ª—å —É —Ä—É–∫–∞—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
          example: "–ü—Ä–æ—î–∫—Ç–∏ —è–∫ uPort –Ω–∞–¥–∞—é—Ç—å —Ü–∏—Ñ—Ä–æ–≤—ñ –ø–∞—Å–ø–æ—Ä—Ç–∏, —è–∫—ñ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è –≤—Ö–æ–¥—É —É —Å–µ—Ä–≤—ñ—Å–∏ –±–µ–∑ –ø–∞—Ä–æ–ª—è."
        };
      default:
        return null;
    }
  };

  const modalData = renderModalContent(openModal);

  return (
    <div className="ai-container">
      <h1>–ë–ª–æ–∫—á–µ–π–Ω</h1>
      <p>
        –ë–ª–æ–∫—á–µ–π–Ω ‚Äî —Ü–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–¥–∞—á—ñ –¥–∞–Ω–∏—Ö, —è–∫–∞ –∑–∞–±–µ–∑–ø–µ—á—É—î
        –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å, –Ω–µ–∑–º—ñ–Ω–Ω—ñ—Å—Ç—å —ñ –±–µ–∑–ø–µ–∫—É –∑–∞–ø–∏—Å—ñ–≤. –ô–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –Ω–µ –ª–∏—à–µ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö, –∞ –π
        —É –±–∞–≥–∞—Ç—å–æ—Ö —ñ–Ω—à–∏—Ö –≥–∞–ª—É–∑—è—Ö.
      </p>

      <section className="ai-section">
        <h2>üîç –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h2>
        <ul>
          <li>
            üí∏ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏
            <button className="inline-btn" onClick={() => handleOpen("crypto")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üì¶ –õ–æ–≥—ñ—Å—Ç–∏–∫–∞
            <button className="inline-btn" onClick={() => handleOpen("supply")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üìú –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏
            <button className="inline-btn" onClick={() => handleOpen("contracts")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üÜî –¶–∏—Ñ—Ä–æ–≤–∞ —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å
            <button className="inline-btn" onClick={() => handleOpen("identity")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
        </ul>
      </section>

      <section className="ai-section">
        <h2>üìö –ö–æ—Ä–∏—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏</h2>
        <ul>
          <li>
            <a href="https://uk.wikipedia.org/wiki/–ë–ª–æ–∫—á–µ–π–Ω" target="_blank" rel="noreferrer">
              –í—ñ–∫—ñ–ø–µ–¥—ñ—è: –ë–ª–æ–∫—á–µ–π–Ω
            </a>
          </li>
          <li>
            <a href="https://www.ibm.com/topics/what-is-blockchain" target="_blank" rel="noreferrer">
              IBM: –©–æ —Ç–∞–∫–µ –±–ª–æ–∫—á–µ–π–Ω?
            </a>
          </li>
          <li>
            <a href="https://ethereum.org/en/what-is-ethereum/" target="_blank" rel="noreferrer">
              Ethereum.org: –ü—Ä–æ Ethereum
            </a>
          </li>
        </ul>
      </section>

      {openModal && modalData && (
        <div className="modal-overlay" onClick={handleClose}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <h3>{modalData.title}</h3>
            <div className="tab-buttons">
              <button className={activeTab === "theory" ? "active" : ""} onClick={() => setActiveTab("theory")}>
                üìò –¢–µ–æ—Ä—ñ—è
              </button>
              <button className={activeTab === "example" ? "active" : ""} onClick={() => setActiveTab("example")}>
                üß™ –ü—Ä–∏–∫–ª–∞–¥
              </button>
            </div>
            <div className="tab-content">
              <p>{activeTab === "theory" ? modalData.theory : modalData.example}</p>
            </div>
            <button className="close-button" onClick={handleClose}>–ó–∞–∫—Ä–∏—Ç–∏</button>
          </div>
        </div>
      )}
    </div>
  );
}
