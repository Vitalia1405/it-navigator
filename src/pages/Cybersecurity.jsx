import React, { useState } from "react";
import "../styles/AI.css"; // –£–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —Å—Ç–∏–ª—å

export default function Cybersecurity() {
  const [openModal, setOpenModal] = useState(null);
  const [activeTab, setActiveTab] = useState("theory");

  const handleOpen = (id) => {
    setOpenModal(id);
    setActiveTab("theory");
  };

  const handleClose = () => setOpenModal(null);

  const renderModalContent = (id) => {
    switch (id) {
      case "phishing":
        return {
          title: "üé£ –§—ñ—à–∏–Ω–≥-–∞—Ç–∞–∫–∏",
          theory: "–§—ñ—à–∏–Ω–≥ ‚Äî —Ü–µ –≤–∏–¥ —Å–æ—Ü—ñ–∞–ª—å–Ω–æ—ó —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—ó, —è–∫–∏–π –ø–æ–ª—è–≥–∞—î —É –≤–∏–º–∞–Ω—é–≤–∞–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–∏—Ö –¥–∞–Ω–∏—Ö —à–ª—è—Ö–æ–º –æ–±–º–∞–Ω—É (–ª–∏—Å—Ç—ñ–≤, —Ñ–µ–π–∫–æ–≤–∏—Ö —Å–∞–π—Ç—ñ–≤).",
          example: "–®–∞—Ö—Ä–∞—ó –º–æ–∂—É—Ç—å —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–ø—ñ—é —Å–∞–π—Ç—É –±–∞–Ω–∫—É —ñ –∑–º—É—Å–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ –ª–æ–≥—ñ–Ω/–ø–∞—Ä–æ–ª—å ‚Äî –¥–∞–Ω—ñ –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å –¥–æ –∑–ª–æ–≤–º–∏—Å–Ω–∏–∫–∞."
        };
      case "firewall":
        return {
          title: "üß± –ë—Ä–∞–Ω–¥–º–∞—É–µ—Ä–∏",
          theory: "–ë—Ä–∞–Ω–¥–º–∞—É–µ—Ä (firewall) ‚Äî —Å–∏—Å—Ç–µ–º–∞, —â–æ –∫–æ–Ω—Ç—Ä–æ–ª—é—î –º–µ—Ä–µ–∂–µ–≤–∏–π —Ç—Ä–∞—Ñ—ñ–∫ —ñ –∑–∞–ø–æ–±—ñ–≥–∞—î –Ω–µ—Å–∞–Ω–∫—Ü—ñ–æ–Ω–æ–≤–∞–Ω–æ–º—É –¥–æ—Å—Ç—É–ø—É.",
          example: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ñ –º–µ—Ä–µ–∂—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –∞–ø–∞—Ä–∞—Ç–Ω—ñ —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω—ñ –±—Ä–∞–Ω–¥–º–∞—É–µ—Ä–∏ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —à–∫—ñ–¥–ª–∏–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤."
        };
      case "encryption":
        return {
          title: "üîê –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è",
          theory: "–®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è ‚Äî –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É —Ñ–æ—Ä–º—É, —â–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ–∑ –∫–ª—é—á–∞. –ó–∞—Ö–∏—â–∞—î –ª–∏—Å—Ç—É–≤–∞–Ω–Ω—è, –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, –ø–∞—Ä–æ–ª—ñ.",
          example: "–ú–µ—Å–µ–Ω–¥–∂–µ—Ä–∏ —è–∫ Signal –∞–±–æ Telegram –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –Ω–∞—Å–∫—Ä—ñ–∑–Ω–µ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è (E2EE) –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—ñ —Ä–æ–∑–º–æ–≤."
        };
      case "pentest":
        return {
          title: "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–µ–Ω–Ω—è",
          theory: "–ü–µ–Ω—Ç–µ—Å—Ç ‚Äî —Ü–µ —Å–∏–º—É–ª—è—Ü—ñ—è –∞—Ç–∞–∫–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º—É –∑ –º–µ—Ç–æ—é –≤–∏—è–≤–ª–µ–Ω–Ω—è –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç–µ–π –¥–æ —Ç–æ–≥–æ, —è–∫ –Ω–∏–º–∏ —Å–∫–æ—Ä–∏—Å—Ç–∞—î—Ç—å—Å—è –∑–ª–æ–≤–º–∏—Å–Ω–∏–∫.",
          example: "–ï—Ç–∏—á–Ω—ñ —Ö–∞–∫–µ—Ä–∏ –º–æ–∂—É—Ç—å –∑–ª–∞–º–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω—ñ—ó —ñ —Å–∫–ª–∞—Å—Ç–∏ –∑–≤—ñ—Ç –∑ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏ —â–æ–¥–æ –ø–æ—Å–∏–ª–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏."
        };
      default:
        return null;
    }
  };

  const modalData = renderModalContent(openModal);

  return (
    <div className="ai-container">
      <h1>–ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞</h1>
      <p>
        –ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞ ‚Äî —Ü–µ –∫–æ–º–ø–ª–µ–∫—Å –∑–∞—Ö–æ–¥—ñ–≤ –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º, –º–µ—Ä–µ–∂ —ñ –¥–∞–Ω–∏—Ö –≤—ñ–¥ –Ω–µ—Å–∞–Ω–∫—Ü—ñ–æ–Ω–æ–≤–∞–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É,
        –∞—Ç–∞–∫, –≤–∏—Ç–æ–∫—ñ–≤ —ñ –∑–ª–æ–≤–∂–∏–≤–∞–Ω—å. –£ —Ü–∏—Ñ—Ä–æ–≤—É –µ–ø–æ—Ö—É –≤–æ–Ω–∞ —Å—Ç–∞–ª–∞ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–æ—é —è–∫ –¥–ª—è –æ–∫—Ä–µ–º–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —Ç–∞–∫ —ñ –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π.
      </p>

      <section className="ai-section">
        <h2>üîç –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h2>
        <ul>
          <li>
            üé£ –§—ñ—à–∏–Ω–≥-–∞—Ç–∞–∫–∏
            <button className="inline-btn" onClick={() => handleOpen("phishing")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üß± –ë—Ä–∞–Ω–¥–º–∞—É–µ—Ä–∏
            <button className="inline-btn" onClick={() => handleOpen("firewall")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üîê –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è
            <button className="inline-btn" onClick={() => handleOpen("encryption")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
          <li>
            üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–µ–Ω–Ω—è
            <button className="inline-btn" onClick={() => handleOpen("pentest")}>–î–æ–∫–ª–∞–¥–Ω—ñ—à–µ</button>
          </li>
        </ul>
      </section>

      <section className="ai-section">
        <h2>üìö –ö–æ—Ä–∏—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏</h2>
        <ul>
          <li>
            <a href="https://uk.wikipedia.org/wiki/–ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞" target="_blank" rel="noreferrer">
              –í—ñ–∫—ñ–ø–µ–¥—ñ—è: –ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞
            </a>
          </li>
          <li>
            <a href="https://www.kaspersky.com/resource-center/definitions/what-is-cyber-security" target="_blank" rel="noreferrer">
              Kaspersky: What is Cybersecurity?
            </a>
          </li>
          <li>
            <a href="https://www.cybersecurityguide.org/" target="_blank" rel="noreferrer">
              Cybersecurity Guide
            </a>
          </li>
        </ul>
      </section>

      {openModal && modalData && (
        <div className="modal-overlay" onClick={handleClose}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <h3>{modalData.title}</h3>
            <div className="tab-buttons">
              <button className={activeTab === "theory" ? "active" : ""} onClick={() => setActiveTab("theory")}>
                üìò –¢–µ–æ—Ä—ñ—è
              </button>
              <button className={activeTab === "example" ? "active" : ""} onClick={() => setActiveTab("example")}>
                üß™ –ü—Ä–∏–∫–ª–∞–¥
              </button>
            </div>
            <div className="tab-content">
              <p>{activeTab === "theory" ? modalData.theory : modalData.example}</p>
            </div>
            <button className="close-button" onClick={handleClose}>–ó–∞–∫—Ä–∏—Ç–∏</button>
          </div>
        </div>
      )}
    </div>
  );
}
